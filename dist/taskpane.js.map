{"version":3,"file":"taskpane.js","mappings":"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","sources":["webpack://outlook-pdf-converter/./src/taskpane/taskpane.js"],"sourcesContent":["Office.onReady((info) => {\n    if (info.host === Office.HostType.Outlook) {\n        document.addEventListener(\"DOMContentLoaded\", function() {\n            initializeAddIn();\n        });\n    }\n});\n\nlet currentEmailData = null;\n\nfunction initializeAddIn() {\n    // Set up event listeners\n    setupEventListeners();\n    \n    // Load email data\n    loadEmailData();\n    \n    // Update filename preview initially\n    updateFilenamePreview();\n}\n\nfunction setupEventListeners() {\n    // Checkbox and input change listeners for preview updates\n    document.getElementById('includeDate').addEventListener('change', updateFilenamePreview);\n    document.getElementById('dateFormat').addEventListener('change', updateFilenamePreview);\n    document.getElementById('includeSender').addEventListener('change', updateFilenamePreview);\n    document.getElementById('includeSubject').addEventListener('change', updateFilenamePreview);\n    document.getElementById('subjectLength').addEventListener('input', updateFilenamePreview);\n    document.getElementById('separator').addEventListener('change', updateFilenamePreview);\n    \n    // Convert button\n    document.getElementById('convertToPDF').addEventListener('click', convertToPDF);\n}\n\nfunction loadEmailData() {\n    Office.context.mailbox.item.loadCustomPropertiesAsync((result) => {\n        if (result.status === Office.AsyncResultStatus.Succeeded) {\n            // Get email properties\n            const item = Office.context.mailbox.item;\n            \n            currentEmailData = {\n                subject: item.subject || 'No Subject',\n                sender: item.sender ? item.sender.displayName || item.sender.emailAddress : 'Unknown Sender',\n                dateTimeReceived: item.dateTimeCreated || new Date(),\n                body: null // Will be loaded when converting\n            };\n            \n            updateFilenamePreview();\n        } else {\n            showStatus('Error loading email data: ' + result.error.message, 'error');\n        }\n    });\n}\n\nfunction updateFilenamePreview() {\n    if (!currentEmailData) {\n        document.getElementById('filenamePreview').textContent = 'Loading...';\n        return;\n    }\n    \n    const includeDate = document.getElementById('includeDate').checked;\n    const dateFormat = document.getElementById('dateFormat').value;\n    const includeSender = document.getElementById('includeSender').checked;\n    const includeSubject = document.getElementById('includeSubject').checked;\n    const subjectLength = parseInt(document.getElementById('subjectLength').value) || 50;\n    const separator = document.getElementById('separator').value;\n    \n    const parts = [];\n    \n    // Add date if selected\n    if (includeDate) {\n        const date = new Date(currentEmailData.dateTimeReceived);\n        let formattedDate = '';\n        \n        switch (dateFormat) {\n            case 'YYYY-MM-DD':\n                formattedDate = date.getFullYear() + '-' + \n                               String(date.getMonth() + 1).padStart(2, '0') + '-' + \n                               String(date.getDate()).padStart(2, '0');\n                break;\n            case 'DD-MM-YYYY':\n                formattedDate = String(date.getDate()).padStart(2, '0') + '-' +\n                               String(date.getMonth() + 1).padStart(2, '0') + '-' +\n                               date.getFullYear();\n                break;\n            case 'MM-DD-YYYY':\n                formattedDate = String(date.getMonth() + 1).padStart(2, '0') + '-' +\n                               String(date.getDate()).padStart(2, '0') + '-' +\n                               date.getFullYear();\n                break;\n        }\n        parts.push(formattedDate);\n    }\n    \n    // Add sender if selected\n    if (includeSender) {\n        const cleanSender = sanitizeFileName(currentEmailData.sender);\n        parts.push(cleanSender);\n    }\n    \n    // Add subject if selected\n    if (includeSubject) {\n        let subject = currentEmailData.subject;\n        if (subject.length > subjectLength) {\n            subject = subject.substring(0, subjectLength) + '...';\n        }\n        const cleanSubject = sanitizeFileName(subject);\n        parts.push(cleanSubject);\n    }\n    \n    const filename = parts.join(separator) + '.pdf';\n    document.getElementById('filenamePreview').textContent = filename || 'email.pdf';\n}\n\nfunction sanitizeFileName(fileName) {\n    // Remove or replace invalid characters for file names\n    return fileName\n        .replace(/[<>:\"/\\\\|?*]/g, '') // Remove invalid characters\n        .replace(/\\s+/g, ' ') // Replace multiple spaces with single space\n        .trim();\n}\n\nasync function convertToPDF() {\n    try {\n        showProgress(true);\n        showStatus('', '');\n        \n        // Disable the convert button\n        document.getElementById('convertToPDF').disabled = true;\n        \n        // Get the email body\n        const emailBody = await getEmailBody();\n        \n        // Create PDF content\n        await createPDF(emailBody);\n        \n        // Add category to email\n        await addEmailCategory();\n        \n        showStatus('Email successfully converted to PDF and categorized!', 'success');\n        \n    } catch (error) {\n        console.error('Error converting to PDF:', error);\n        showStatus('Error converting to PDF: ' + error.message, 'error');\n    } finally {\n        showProgress(false);\n        document.getElementById('convertToPDF').disabled = false;\n    }\n}\n\nfunction getEmailBody() {\n    return new Promise((resolve, reject) => {\n        Office.context.mailbox.item.body.getAsync(\n            Office.CoercionType.Html,\n            (result) => {\n                if (result.status === Office.AsyncResultStatus.Succeeded) {\n                    resolve(result.value);\n                } else {\n                    reject(new Error('Failed to get email body: ' + result.error.message));\n                }\n            }\n        );\n    });\n}\n\nfunction loadJsPDF() {\n    return new Promise((resolve, reject) => {\n        if (window.jsPDF) {\n            resolve();\n            return;\n        }\n        \n        const script = document.createElement('script');\n        script.src = 'https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js';\n        script.onload = () => {\n            resolve();\n        };\n        script.onerror = (error) => {\n            reject(new Error('Failed to load jsPDF library'));\n        };\n        document.head.appendChild(script);\n    });\n}\n\nasync function createPDF(emailBody) {\n    return new Promise(async (resolve, reject) => {\n        try {\n            // Load jsPDF from CDN if not already loaded\n            if (!window.jsPDF) {\n                await loadJsPDF();\n            }\n            \n            const doc = new window.jsPDF.jsPDF();\n            \n            // Set up PDF metadata\n            const filename = document.getElementById('filenamePreview').textContent;\n            doc.setProperties({\n                title: filename,\n                subject: currentEmailData.subject,\n                author: currentEmailData.sender,\n                creator: 'Outlook PDF Converter'\n            });\n            \n            // Add email header information\n            doc.setFontSize(16);\n            doc.text('Email Details', 20, 20);\n            \n            doc.setFontSize(12);\n            let yPosition = 35;\n            \n            doc.text(`From: ${currentEmailData.sender}`, 20, yPosition);\n            yPosition += 10;\n            \n            doc.text(`Subject: ${currentEmailData.subject}`, 20, yPosition);\n            yPosition += 10;\n            \n            const dateStr = new Date(currentEmailData.dateTimeReceived).toLocaleString();\n            doc.text(`Date: ${dateStr}`, 20, yPosition);\n            yPosition += 20;\n            \n            // Add email body\n            doc.setFontSize(10);\n            \n            // Convert HTML to plain text for PDF (basic conversion)\n            const tempDiv = document.createElement('div');\n            tempDiv.innerHTML = emailBody;\n            const plainText = tempDiv.textContent || tempDiv.innerText || '';\n            \n            // Split text into lines that fit the PDF width\n            const maxLineWidth = 170;\n            const lines = doc.splitTextToSize(plainText, maxLineWidth);\n            \n            // Add lines to PDF, handling page breaks\n            const pageHeight = doc.internal.pageSize.height;\n            const lineHeight = 5;\n            \n            for (let i = 0; i < lines.length; i++) {\n                if (yPosition + lineHeight > pageHeight - 20) {\n                    doc.addPage();\n                    yPosition = 20;\n                }\n                doc.text(lines[i], 20, yPosition);\n                yPosition += lineHeight;\n            }\n            \n            // Save the PDF\n            doc.save(filename);\n            resolve();\n            \n        } catch (error) {\n            reject(error);\n        }\n    });\n}\n\nfunction addEmailCategory() {\n    return new Promise((resolve, reject) => {\n        // Get current categories\n        Office.context.mailbox.item.categories.getAsync((result) => {\n            if (result.status === Office.AsyncResultStatus.Succeeded) {\n                const currentCategories = result.value;\n                \n                // Check if PDF category already exists\n                const pdfCategoryExists = currentCategories.some(cat => cat.displayName === 'PDF');\n                \n                if (!pdfCategoryExists) {\n                    // Add the PDF category\n                    const pdfCategory = {\n                        displayName: 'PDF',\n                        color: Office.MailboxEnums.CategoryColor.Preset1 // Red color\n                    };\n                    \n                    const updatedCategories = [...currentCategories, pdfCategory];\n                    \n                    Office.context.mailbox.item.categories.setAsync(\n                        updatedCategories,\n                        (setResult) => {\n                            if (setResult.status === Office.AsyncResultStatus.Succeeded) {\n                                resolve();\n                            } else {\n                                reject(new Error('Failed to add PDF category: ' + setResult.error.message));\n                            }\n                        }\n                    );\n                } else {\n                    resolve(); // Category already exists\n                }\n            } else {\n                reject(new Error('Failed to get current categories: ' + result.error.message));\n            }\n        });\n    });\n}\n\nfunction showProgress(show) {\n    const progressIndicator = document.getElementById('progressIndicator');\n    if (show) {\n        progressIndicator.classList.remove('hidden');\n    } else {\n        progressIndicator.classList.add('hidden');\n    }\n}\n\nfunction showStatus(message, type) {\n    const statusSection = document.getElementById('statusSection');\n    const statusMessage = document.getElementById('statusMessage');\n    \n    if (message) {\n        statusMessage.textContent = message;\n        statusSection.className = 'status';\n        if (type) {\n            statusSection.classList.add(type);\n        }\n        statusSection.classList.remove('hidden');\n    } else {\n        statusSection.classList.add('hidden');\n    }\n}"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","_invoke","enumerable","configurable","writable","_arrayLikeToArray","Array","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","Office","onReady","info","host","HostType","Outlook","document","addEventListener","getElementById","updateFilenamePreview","convertToPDF","context","mailbox","item","loadCustomPropertiesAsync","result","status","AsyncResultStatus","Succeeded","currentEmailData","subject","sender","emailAddress","dateTimeReceived","dateTimeCreated","Date","body","showStatus","error","message","includeDate","checked","dateFormat","includeSender","includeSubject","subjectLength","parseInt","separator","parts","date","formattedDate","getFullYear","String","getMonth","padStart","getDate","push","cleanSender","sanitizeFileName","substring","cleanSubject","filename","join","textContent","fileName","replace","trim","_convertToPDF","_callee","emailBody","_t","_context","showProgress","disabled","getEmailBody","createPDF","addEmailCategory","console","reject","getAsync","CoercionType","Html","Error","loadJsPDF","window","jsPDF","script","createElement","src","onload","onerror","head","appendChild","_x","_createPDF","_callee3","_context3","_ref","_callee2","doc","yPosition","dateStr","tempDiv","plainText","lines","pageHeight","_t2","_context2","setProperties","title","author","creator","setFontSize","text","concat","toLocaleString","innerHTML","innerText","splitTextToSize","internal","pageSize","height","addPage","save","_x2","_x3","categories","currentCategories","some","cat","pdfCategory","color","MailboxEnums","CategoryColor","Preset1","updatedCategories","isArray","_arrayWithoutHoles","from","_iterableToArray","toString","slice","constructor","name","test","_unsupportedIterableToArray","_nonIterableSpread","setAsync","setResult","show","progressIndicator","classList","remove","add","type","statusSection","statusMessage","className"],"sourceRoot":""}